// <auto-generated />

#pragma warning disable 618, 612, 414, 168, CS1591, SA1129, SA1309, SA1312, SA1403, SA1649

using MsgPack = global::MessagePack;

[assembly: MsgPack::Internal.GeneratedAssemblyMessagePackResolverAttribute(typeof(TestProject4_v3.MyResolver), 3, 0)]

namespace TestProject4_v3 {

/// <summary>A MessagePack resolver that uses generated formatters for types in this assembly.</summary>
partial class MyResolver : MsgPack::IFormatterResolver
{
	/// <summary>An instance of this resolver that only returns formatters specifically generated for types in this assembly.</summary>
	public static readonly MsgPack::IFormatterResolver Instance = new MyResolver();

	private MyResolver()
	{
	}

	public MsgPack::Formatters.IMessagePackFormatter<T> GetFormatter<T>()
	{
		return FormatterCache<T>.Formatter;
	}

	private static class FormatterCache<T>
	{
		internal static readonly MsgPack::Formatters.IMessagePackFormatter<T> Formatter;

		static FormatterCache()
		{
			var f = MyResolverGetFormatterHelper.GetFormatter(typeof(T));
			if (f != null)
			{
				Formatter = (MsgPack::Formatters.IMessagePackFormatter<T>)f;
			}
		}
	}

	private static class MyResolverGetFormatterHelper
	{
		private static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int> closedTypeLookup = new(2)
		{
			{ typeof(global::System.Int32[]), 0 },
			{ typeof(global::TestProject4_v3.A), 1 },
		};

		internal static object GetFormatter(global::System.Type t)
		{
			if (closedTypeLookup.TryGetValue(t, out int closedKey))
			{
				return closedKey switch
				{
					0 => new MsgPack::Formatters.ArrayFormatter<global::System.Int32>(),
					1 => new global::TestProject4_v3.MyResolver.TestProject4_v3.AFormatter(),
					_ => null, // unreachable
				};
			}

			return null;
		}
	}
}

}
